<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="API TestSuites...(failed)(failed)"
           tests="1"
           failures="1"
           errors="0"
           skipped="0"
           time="263.348">
  <properties />
            <testcase name="TC_06_GET_GetVideoThumbnailAPI_api_check_when_Sharing_of_metadata_is_Checked_at_Account_Level_Positive" time="263.348" classname="com.vbrick.avenger.videocommentapi_AV_9879_testcases.GetVideoThumbnail_AV_28062">
                <failure type="com.vbrick.Exception.ReasonsTimeOutException"
                  message="
Build info: version: &apos;3.6.0&apos;, revision: &apos;6fbf3ec767&apos;, time: &apos;2017-09-27T15:28:36.4Z&apos;

Driver info: driver.version: unknown"
              >
<![CDATA[
  com.vbrick.avenger.funUtil.WaitForElements.waitForElementPresent(WaitForElements.java:140)
  com.vbrick.avenger.funUtil.WebElements.check_Checkbox(WebElements.java:536)
  com.vbrick.avenger.pageobjects.AvengerUserPasswordParametersPage.checkAllowSharingofmetadataprivateVideos(AvengerUserPasswordParametersPage.java:503)
  com.vbrick.avenger.videocommentapi_AV_9879_testcases.GetVideoThumbnail_AV_28062.TC_06_GET_GetVideoThumbnailAPI_api_check_when_Sharing_of_metadata_is_Checked_at_Account_Level_Positive(GetVideoThumbnail_AV_28062.java:310)
  sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
  sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
  java.lang.reflect.Method.invoke(Unknown Source)
  org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
  org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
  org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
  org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
  org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
  org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
  java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
  java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
  java.lang.Thread.run(Unknown Source)
]]>
      </failure>

          </testcase>
  
  
  
</testsuite>
